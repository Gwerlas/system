---
- name: Hardware support
  when: not in_container
  block:
    - name: Portage - make.conf - cpuid2cpuflags tool
      become: true
      community.general.portage:
        package: app-portage/cpuid2cpuflags

    - name: Portage - make.conf - Get CPU flags
      ansible.builtin.command:
        cmd: cpuid2cpuflags
      register: cpuid2cpuflags
      changed_when: false
      check_mode: false

    - name: Portage - make.conf - Hardware support
      become: true
      when: item.value | length > 0
      ansible.builtin.lineinfile:
        dest: /etc/portage/make.conf
        line: '{{ item.key }}="{{ item.value }}"'
        regexp: '^{{ item.key }}='
        insertafter: "{{ item.insertafter | default(omit) }}"
        insertbefore: "{{ item.insertbefore | default(omit) }}"
        firstmatch: "{{ 'insertbefore' in item }}"
      loop:
        - key: COMMON_FLAGS
          value: "{{ system_packages_build_cflags }}"
          insertbefore: CFLAGS
        - key: CFLAGS
          value: ${COMMON_FLAGS}
        - key: CXXFLAGS
          value: ${COMMON_FLAGS}
          insertafter: CFLAGS
        - key: FCFLAGS
          value: ${COMMON_FLAGS}
          insertafter: CXXFLAGS
        - key: FFLAGS
          value: ${COMMON_FLAGS}
          insertafter: FCFLAGS
        - key: "{{ cpuid2cpuflags.stdout | split(': ') | first }}"
          value: "{{ cpuid2cpuflags.stdout | split(': ') | last }}"
          state: "{{ in_container | ternary('absent', 'present') }}"
        - key: CAMERAS
          value: "{{ system_portage_cameras | join(' ') }}"
          state: "{{ in_container | ternary('absent', 'present') }}"
        - key: VIDEO_CARDS
          value: "{{ system_portage_video_cards | join(' ') }}"
          state: "{{ in_container | ternary('absent', 'present') }}"
      notify: emerge --newuse

- name: Portage - make.conf - Get installed Python versions
  ansible.builtin.command:
    cmd: equery -q list -F '$slot' dev-lang/python
  changed_when: false
  check_mode: false
  register: equery

- name: Portage - make.conf - Common settings
  become: true
  when: item.value | length > 0
  ansible.builtin.lineinfile:
    dest: /etc/portage/make.conf
    line: '{{ item.key }}="{{ item.value }}"'
    regexp: '^{{ item.key }}='
    insertafter: "{{ item.insertafter | default(omit) }}"
    insertbefore: "{{ item.insertbefore | default(omit) }}"
    firstmatch: "{{ 'insertbefore' in item }}"
  loop:
    - key: ACCEPT_KEYWORDS
      value: "{{ system_portage_accept_keywords | join(' ') }}"
    - key: L10N
      value: "{{ system_l10n | join(' ') }}"
    - key: EMERGE_DEFAULT_OPTS
      value: "{{ portage_opts | join(' ') | trim }}"
    - key: FEATURES
      value: "{{ (['${FEATURES}'] + portage_features) | join(' ') | regex_replace('\\s+', ' ') }}"
    - key: GENTOO_MIRRORS
      value: "{{ system_portage_gentoo_mirrors | join(' ') }}"
    - key: PYTHON_TARGETS
      value: |-
        {{
          system_portage_python_targets |
          default(
            ['python'] |
            product(equery.stdout_lines | map('replace', '.', '_')) |
            map('join') |
            join(' ')
          )
        }}
    - key: PYTHON_SINGLE_TARGET
      value: "{{ system_portage_python_single_target }}"
      insertafter: PYTHON_TARGETS
    - key: RUBY_TARGETS
      value: "{{ system_portage_ruby_targets | join(' ') }}"
  notify: emerge --newuse

- name: Become root
  become: true
  block:
    - name: Portage - make.conf - Configuration files
      ansible.builtin.template:
        src: portage/{{ file }}.j2
        dest: /etc/portage/{{ file }}
        group: portage
        mode: "0664"
      loop:
        - package.license/kernels
        - package.mask/python
        - package.use/firewalld
        - package.use/kernel
        - package.use/libreoffice
        - package.use/lvm2
      loop_control:
        loop_var: file
      notify: emerge --newuse

    - name: Packages - make.conf - Gnome
      when: "'gnome' in current_profiles"
      ansible.builtin.lineinfile:
        path: /etc/conf.d/display-manager
        line: DISPLAYMANAGER="gdm"
        regexp: ^DISPLAYMANAGER=
        create: true
        group: portage
        mode: "0664"
      notify:
        - restart display-manager
